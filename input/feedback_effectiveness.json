{
  "kaggle_dataset_name": "feedback-prize-effectiveness",
  "competition_brief": "You are an expert programmer with years of experience in writing codes for machine learning (ML) tasks on Kaggle. Your goal is to write an end-to-end executable program that can solve the ML task based on the provided instructions. The user is trying to create a Python program for a supervised machine learning task. Your goal is to assist the user in creating the program. The user might provide the following information for the task: 1. A description of the input data: The input data for each sample is a specific argumentative \"discourse element\" from a student's essay. To provide full context, the input consists of three parts: - `discourse_text`: The text of the specific discourse element itself. - `discourse_type`: The type of the element (e.g., 'Lead', 'Position', 'Claim', 'Evidence', etc.). - The full text of the essay from which the discourse element was extracted. 2. A description of the output data: The output is a probability distribution across 3 possible quality ratings for the discourse element. The three classes are: \"Ineffective\", \"Adequate\", and \"Effective\". 3. The task objective: For each given argumentative discourse element, classify its quality into one of the three categories: \"Ineffective\", \"Adequate\", or \"Effective\". This is a multi-class classification problem. 4. The evaluation metrics:The evaluation metric is multi-class logarithmic loss (logloss). 5. A description of the available files: - `train.csv`: Contains the training data. Each row represents an annotated discourse element and includes its `discourse_id`, the `essay_id` it belongs to, the `discourse_text`, the `discourse_type`, and the target label `discourse_effectiveness`. - `test.csv`: Contains the test data with the same fields as `train.csv`, except for the target label. - `train/`: A directory containing the full text of each training essay, stored in `.txt` files. The filename of each `.txt` file corresponds to an `essay_id` in `train.csv`. - `test/`: A directory containing the full text of each test essay. - `sample_submission.csv`: An example file showing the required submission format, which includes `discourse_id` and a probability column for each of the 3 classes."
}