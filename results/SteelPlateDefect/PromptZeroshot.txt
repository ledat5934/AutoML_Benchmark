You are an expert programmer with years of experience in writing codes for machine learning (ML) tasks on Kaggle. Your goal is to write an end-to-end executable program that can solve the ML task based on the provided instructions. The user is trying to create a Python program for a supervised machine learning task. Your goal is to assist the user in creating the program. The user might provide the following information for the task:



The user is trying to create a Python program for a supervised machine learning task. Your goal is to assist the user in creating the program. The user might provide the following information for the task:



1. A description of the input data:-- The input data is tabular, consisting of a set of numerical and/or categorical features generated from a model trained on the original Steel Plates Faults dataset. These features describe the characteristics of steel plates.



2. A description of the output data:-- The output consists of 7 independent probability values,one for each of the 7 possible defect types. The 7 defect types are: Pastry, Z_Scratch, K_Scatch, Stains, Dirtiness, Bumps, and Other_Faults. Each of these is a binary target (1 if the defect is present, 0 if not).



3. The task objective:-- For each steel plate sample, predict the probability of each of the 7 defect types occurring. Since a single plate can have multiple defects simultaneously, this is a multi-label classification problem.



4. The evaluation metrics:-- The evaluation metric is the average Area Under the ROC Curve (AUC) across all 7 defect categories.



5. A description of the available files:--

- `train.csv`: The training dataset, which contains the input features and the 7 binary target columns (Pastry, Z_Scratch, K_Scatch, Stains, Dirtiness, Bumps, Other_Faults).

split the train to evaluate by these folowing metrics: accuracy log_loss f1_macro f1_weighted roc_auc_ovr roc_auc_ovr_weighted
